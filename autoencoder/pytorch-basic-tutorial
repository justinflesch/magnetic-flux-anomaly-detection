# tensors: specialized data structures like arrays and matrices

# set up environment
import torch
import numpy as np

# initialize tensor
data = [[1,2], [3,4]]
x_data = torch.tensor(data)

print(x_data)

# from numpy arrays
np_array = np.array(data)
x_np = torch.from_numpy(np_array)

print(x_np)

# from another tensor and maintain the shape and data type
x_ones = torch.ones_like(x_data) # integers
print(f"Ones tensor: \n {x_ones} \n")
x_rand = torch.rand_like(x_data, dtype=torch.float) # overridden data type
print(f"Random tensor: \n {x_rand} \n") 

shape = (2,3,)
rand_tensor = torch.rand(shape)
ones_tensor = torch.ones(shape)
zeros_tensor = torch.zeros(shape)

